image: golang:alpine

stages:
  - Test
  - Build

db_create_test:
  stage: Test
  services:
    - postgres:15.3-alpine3.18
  variables:
    POSTGRES_DB: deslfy
    POSTGRES_USER: root
    POSTGRES_PASSWORD: secret
    POSTGRES_PORT: 5432
    POSTGRES_HOST_AUTH_METHOD: trust
    TZ: Europe/Istanbul
  before_script:
    - apk add --update curl && rm -rf /var/cache/apk/*
    - apk add --no-cache make
  script:
    - echo "Database service started"
    - curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.1/migrate.linux-amd64.tar.gz | tar xvz
    - mv migrate /usr/bin/migrate
    - which migrate
    - make migrateup
    - make test
  tags:
    - deploy-runner
  when: manual

build_image:
  stage: Build
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - name: docker:dind
      alias: docker
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - docker compose up
    - docker image tag deslfy:${CI_COMMIT_SHORT_SHA} $AWS_DOCKER_REGISTRY_URI/deslfy:${CI_COMMIT_SHORT_SHA}
    - aws ecr get-login-password | docker login -u AWS $AWS_DOCKER_REGISTRY_URI --password-stdin
    - docker push $AWS_DOCKER_REGISTRY_URI/deslfy:${CI_COMMIT_SHORT_SHA}
  tags:
    - deploy-runner
  when: manual
