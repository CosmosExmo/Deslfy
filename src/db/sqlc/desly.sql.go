// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: desly.sql

package db

import (
	"context"
)

const createDesly = `-- name: CreateDesly :one
INSERT INTO deslies (redirect, desly)
VALUES ($1, substr(gen_random_uuid()::text, 1, 6))
RETURNING id, redirect, desly, clicked, created_at
`

func (q *Queries) CreateDesly(ctx context.Context, redirect string) (Desly, error) {
	row := q.db.QueryRowContext(ctx, createDesly, redirect)
	var i Desly
	err := row.Scan(
		&i.ID,
		&i.Redirect,
		&i.Desly,
		&i.Clicked,
		&i.CreatedAt,
	)
	return i, err
}

const getDeslyByDesly = `-- name: GetDeslyByDesly :one
/* -- name: GetDesly :one
SELECT *
FROM deslies
WHERE id = $1
LIMIT 1; */

SELECT id, redirect, desly, clicked, created_at
FROM deslies
WHERE desly = $1
LIMIT 1
`

func (q *Queries) GetDeslyByDesly(ctx context.Context, desly string) (Desly, error) {
	row := q.db.QueryRowContext(ctx, getDeslyByDesly, desly)
	var i Desly
	err := row.Scan(
		&i.ID,
		&i.Redirect,
		&i.Desly,
		&i.Clicked,
		&i.CreatedAt,
	)
	return i, err
}
